<?xml version="1.0" encoding="utf-8"?>
<spanning:ColumnSpanningGridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:spanning="com.squaredi.grids.sparkdatagrid.columnSpanning.renderers.*"
					width="100%" height="100%"
					clipAndEnableScrolling="true"
					creationComplete="onCreationComplete(event)"
                    preinitialize="preinitializeHandler(event)"
					>
	<fx:Script>
        <![CDATA[
        import com.squaredi.examples.grids.columnspanning.*;

        import mx.events.FlexEvent;

        [Bindable]
        public var vo:CellDataVO;

        public override function prepare( hasBeenRecycled:Boolean ):void
        {

            super.prepare(hasBeenRecycled);

            if (data)
            {
                vo = CellDataVO(data[column.dataField])
            }
            else
            {
                vo = null
            }



        }

        protected function onCreationComplete( event:FlexEvent ):void
        {

        }

        private function preinitializeHandler( event:FlexEvent ):void
        {
            spannableItemRendererAccessor = new SpannableGridItemRendererImpl(this)
        }
        ]]>
    </fx:Script>
	<s:SkinnableContainer id="rowRenderer"
						  top="0" bottom="0"
						  left="0" right="0"

						  >
		<s:Rect id="bgColor"
				top="0" bottom="0"
				left="0" right="0"
				>
			<s:fill>
				<s:RadialGradient>
					<s:GradientEntry color="#FFFFFF" alpha = ".5"/>
					<s:GradientEntry color="#FF0000" alpha=".5" />
				</s:RadialGradient>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke color="#00FF00" alpha=".33" />
			</s:stroke>
		</s:Rect>
		<s:Label id="labelTxt" text="{vo.label}" verticalCenter="0"
                left="0" right="0"
                textAlign="center"
                />
	</s:SkinnableContainer>
</spanning:ColumnSpanningGridItemRenderer>
